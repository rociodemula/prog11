/*
 * Tarea PROG11: Se incorpora la obtención de datos de mysql.
 ** Tarea PROG10: Reconstrucción de la aplicación incorporando la capa gráfica.
 */

package basicos;

import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;

/**
 * Clase para gestión gráfica del listado de trabajadores contenidos en la base
 * de datos de mysql. 
 *
 * @since version 2.0 13/04/2014 (PROG10)
 * @author RociodeMula <rociodemula@gmail.com>
 * @version 2.1 04/05/2014 (PROG11)
 */
public class ListarTrabajadoresUI extends javax.swing.JDialog {
    
    static ArrayList <Trabajador> lista; //declaramos un ArrayList para vuelco de datos
    
    /**
     * Contructor de la clase ListarTrabajadoresUI
     * 
     * @since version 2.0 13/04/2014 (PROG10)
     * @param parent frame desde donde se crea el objeto
     * @param modal modo de arranque (true o false)
     */
    public ListarTrabajadoresUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        Auxiliar.leerFichero(); //volacamos los datos de mysql en el array
        initComponents();
        //desactivamos la edición de los totales visualizados al pie del informe
        totalTrabajadores.setEditable(false); 
        totalFijos.setEditable(false);
        totalEventuales.setEditable(false);
        //volcamos los datos del array principal, al array de trabajo
        lista = Auxiliar.archivo;
        //lo ordenamos alfabéticamente la lista como opción por defecto
        actualizaLista("A-Z");       
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaTrabajadores = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        botonOrdenAZ = new javax.swing.JRadioButton();
        botonOrdenZA = new javax.swing.JRadioButton();
        botonOrdenNif = new javax.swing.JRadioButton();
        botonOrdenNomina = new javax.swing.JRadioButton();
        botonVerInfo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        totalTrabajadores = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        totalEventuales = new javax.swing.JTextField();
        totalFijos = new javax.swing.JTextField();
        botonCerrarListado = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Trabajadores (NIF/NIE -- Nombre -- Importe neto nómina)"));

        listaTrabajadores.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(listaTrabajadores);

        jLabel1.setText("Ordenar por:");

        buttonGroup4.add(botonOrdenAZ);
        botonOrdenAZ.setSelected(true);
        botonOrdenAZ.setText("Nombre (A-Z)");
        botonOrdenAZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOrdenAZActionPerformed(evt);
            }
        });

        buttonGroup4.add(botonOrdenZA);
        botonOrdenZA.setText("Nombre (Z-A)");
        botonOrdenZA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOrdenZAActionPerformed(evt);
            }
        });

        buttonGroup4.add(botonOrdenNif);
        botonOrdenNif.setText("NIF/NIE");
        botonOrdenNif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOrdenNifActionPerformed(evt);
            }
        });

        buttonGroup4.add(botonOrdenNomina);
        botonOrdenNomina.setText("Importe Neto Nómina");
        botonOrdenNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOrdenNominaActionPerformed(evt);
            }
        });

        botonVerInfo.setText("Ver Información");
        botonVerInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVerInfoActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Totales por tipo de trabajador"));

        jLabel2.setText("Total de Trabajadores en la empresa:");

        totalTrabajadores.setText(String.valueOf(Auxiliar.archivo.size()));

        jLabel3.setText("Nº de Trabajadores fijos:");

        jLabel4.setText("Nº de Trabajadores eventuales:");

        totalEventuales.setText(String.valueOf(TrabajadorEventual.getTotalEventuales())
        );

        totalFijos.setText(String.valueOf(TrabajadorFijo.getTotalFijos())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(totalTrabajadores, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(totalFijos, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(totalEventuales, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(totalTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalFijos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(totalEventuales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        botonCerrarListado.setText("Cerrar Listado");
        botonCerrarListado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarListadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(botonOrdenAZ)
                        .addGap(18, 18, 18)
                        .addComponent(botonOrdenZA)
                        .addGap(18, 18, 18)
                        .addComponent(botonOrdenNif)
                        .addGap(18, 18, 18)
                        .addComponent(botonOrdenNomina)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 496, Short.MAX_VALUE)
                        .addComponent(botonVerInfo)
                        .addGap(38, 38, 38))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botonCerrarListado)
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonVerInfo)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonOrdenAZ)
                    .addComponent(botonOrdenZA)
                    .addComponent(botonOrdenNif)
                    .addComponent(botonOrdenNomina))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(botonCerrarListado))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Trabajadores (NIF/NIE -- Nombre -- Importe neto nómina)");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonVerInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVerInfoActionPerformed
        //Si pulsamos Ver información, se muestra el trabajador seleccionado en 
        //una ventana
        if (listaTrabajadores.getSelectedIndex()>=0){
            JOptionPane.showMessageDialog(null, lista.get(listaTrabajadores.getSelectedIndex()), 
                    "Datos", JOptionPane.INFORMATION_MESSAGE);
        }else{ //si no se ha seleccionado ningún trabajador, mensaje de error
            JOptionPane.showMessageDialog(null, "No hay ningún trabajador seleccionado.", 
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonVerInfoActionPerformed

    private void botonCerrarListadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarListadoActionPerformed
        this.setVisible(false); //si se pulsa Cerrar, devolvemos el control al frame
    }//GEN-LAST:event_botonCerrarListadoActionPerformed

    private void botonOrdenNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOrdenNominaActionPerformed
        actualizaLista("NOMINA"); //si se marca ordenación por nómina, actualizamos la lista
    }//GEN-LAST:event_botonOrdenNominaActionPerformed

    private void botonOrdenNifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOrdenNifActionPerformed
        actualizaLista("NIF/NIE"); //si se marca ordenación por nif, actualizamos.
    }//GEN-LAST:event_botonOrdenNifActionPerformed

    private void botonOrdenZAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOrdenZAActionPerformed
        actualizaLista("Z-A"); //si se marca ordenación Z-A, actualizamos
    }//GEN-LAST:event_botonOrdenZAActionPerformed

    private void botonOrdenAZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOrdenAZActionPerformed
        actualizaLista("A-Z"); //si se marca ordenación A-Z, actualizamos
    }//GEN-LAST:event_botonOrdenAZActionPerformed

    /**
     * Método que genera la Lista de trabajadores incrustada en la ventana, y
     * la ordena por 4 criterios diferentes indicados por parámetro de entreda.
     * Segun el valor del parámetro, se puede ordenar por:
     *      "A-Z" ordenando alfabéticamente de forma ascendente
     *      "Z-A" ordenando alfabéticamente de forma descendente
     *      "NIF/NIE" ordenando por nif de forma ascendente
     *      "NOMINA" ordenando por importe neto nómina de forma desdcendente.
     * 
     * @since version 2.0 13/04/2014 (PROG10)
     * @param tipoOrdenacion String con el tipo de ordenación deseada.
     */
    public final void actualizaLista(String tipoOrdenacion){
        //declaramos e inicializamos un array de tamaño acorde con el del archivo de trabajadores
        final String[] array = new String[lista.size()];
        switch (tipoOrdenacion){
            //usaremos el comparador previamente definido según el caso
            case "A-Z": 
                Collections.sort(lista, new ComparadorNombreAscendente());
                break;
            case "Z-A":
                Collections.sort(lista, new ComparadorNombreDescendente());
                break;
            case "NIF/NIE":
                Collections.sort(lista, new ComparadorNif());
                break;
            case "NOMINA":
                Collections.sort(lista, new ComparadorNetoNominaDescendente());
                break;
        }
        
        //vamos pasando los atributos que nos interesan al array, ya ordenados.
        for (int i=0;i<lista.size();i++){
            array[i]=lista.get(i).getNifONie() + " -- " + lista.get(i).getNombre() 
                    + " -- " + String.format("%.2f", lista.get(i).calcularImporteNetoNomina());
        }
        //cargamos los datos del array a la JList incrustada en el formulario de diálogo.
        listaTrabajadores.setModel(new javax.swing.AbstractListModel() {

            @Override
            public int getSize() {
                return array.length; //le damos a la lista el tamaño del array
            }

            @Override
            public Object getElementAt(int index) {
                return array[index]; //cargamos la lista con cada elemento del array.
            }
        } );
        
    }
    /*
     * Comentamos el main y desactivamos el javadoc. 
     * @param args the command line arguments
     *//*
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         *//*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarTrabajadoresUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarTrabajadoresUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarTrabajadoresUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarTrabajadoresUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog *//*
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListarTrabajadoresUI dialog = new ListarTrabajadoresUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCerrarListado;
    private javax.swing.JRadioButton botonOrdenAZ;
    private javax.swing.JRadioButton botonOrdenNif;
    private javax.swing.JRadioButton botonOrdenNomina;
    private javax.swing.JRadioButton botonOrdenZA;
    private javax.swing.JButton botonVerInfo;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listaTrabajadores;
    private javax.swing.JTextField totalEventuales;
    private javax.swing.JTextField totalFijos;
    private javax.swing.JTextField totalTrabajadores;
    // End of variables declaration//GEN-END:variables
}
